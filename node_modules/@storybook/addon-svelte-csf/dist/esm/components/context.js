function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { getContext, hasContext, setContext } from "svelte";
var CONTEXT_KEY = "storybook-registration-context";
export function createRenderContext() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  setContext(CONTEXT_KEY, _objectSpread({
    render: true,
    register: function register() {},
    meta: {},
    args: {}
  }, props));
}
export function createRegistrationContext(repositories) {
  setContext(CONTEXT_KEY, {
    render: false,
    register: function register(story) {
      repositories.stories.push(story);
    },

    set meta(value) {
      // eslint-disable-next-line no-param-reassign
      repositories.meta = value;
    },

    args: {}
  });
}
export function useContext() {
  if (!hasContext(CONTEXT_KEY)) {
    createRenderContext();
  }

  return getContext(CONTEXT_KEY);
}