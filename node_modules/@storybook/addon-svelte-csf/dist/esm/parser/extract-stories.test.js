import { extractStories } from './extract-stories';
describe('extractSource', function () {
  test('Simple Story', function () {
    expect(extractStories("\n        <script>\n          import { Story } from '@storybook/svelte';\n        </script>\n\n        <Story name=\"MyStory\">\n          <div>a story</div>\n        </Story>\n        ")).toMatchInlineSnapshot("\n      Object {\n        \"allocatedIds\": Array [\n          \"default\",\n          \"Story\",\n        ],\n        \"stories\": Object {\n          \"MyStory\": Object {\n            \"hasArgs\": false,\n            \"name\": \"MyStory\",\n            \"source\": \"<div>a story</div>\",\n            \"template\": false,\n          },\n        },\n      }\n    ");
  });
  test('Explicit Id Story', function () {
    expect(extractStories("\n        <script>\n          import { Story } from '@storybook/svelte';\n        </script>\n\n        <Story id=\"myId\" name=\"MyStory\">\n          <div>a story</div>\n        </Story>\n        ")).toMatchInlineSnapshot("\n      Object {\n        \"allocatedIds\": Array [\n          \"default\",\n          \"Story\",\n        ],\n        \"stories\": Object {\n          \"myId\": Object {\n            \"hasArgs\": false,\n            \"name\": \"MyStory\",\n            \"source\": \"<div>a story</div>\",\n            \"template\": false,\n          },\n        },\n      }\n    ");
  });
  test('Args Story', function () {
    expect(extractStories("\n        <script>\n          import { Story } from '@storybook/svelte';\n        </script>\n\n        <Story name=\"MyStory\" let:args>\n          <div>a story</div>\n        </Story>\n        ")).toMatchInlineSnapshot("\n      Object {\n        \"allocatedIds\": Array [\n          \"default\",\n          \"Story\",\n        ],\n        \"stories\": Object {\n          \"MyStory\": Object {\n            \"hasArgs\": true,\n            \"name\": \"MyStory\",\n            \"source\": \"<div>a story</div>\",\n            \"template\": false,\n          },\n        },\n      }\n    ");
  });
  test('Simple Template', function () {
    expect(extractStories("\n        <script>\n          import { Template } from '@storybook/svelte';\n        </script>\n\n        <Template name=\"MyTemplate\">\n          <div>a template</div>\n        </Template>\n        ")).toMatchInlineSnapshot("\n      Object {\n        \"allocatedIds\": Array [\n          \"default\",\n          \"Template\",\n        ],\n        \"stories\": Object {\n          \"tpl:MyTemplate\": Object {\n            \"hasArgs\": false,\n            \"name\": \"MyTemplate\",\n            \"source\": \"<div>a template</div>\",\n            \"template\": true,\n          },\n        },\n      }\n    ");
  });
  test('Unnamed Template', function () {
    expect(extractStories("\n        <script>\n          import { Template } from '@storybook/svelte';\n        </script>\n\n        <Template>\n          <div>a template</div>\n        </Template>\n        ")).toMatchInlineSnapshot("\n      Object {\n        \"allocatedIds\": Array [\n          \"default\",\n          \"Template\",\n        ],\n        \"stories\": Object {\n          \"tpl:default\": Object {\n            \"hasArgs\": false,\n            \"name\": \"default\",\n            \"source\": \"<div>a template</div>\",\n            \"template\": true,\n          },\n        },\n      }\n    ");
  });
  test('Multiple Stories', function () {
    expect(extractStories("\n        <script>\n          import { Template } from '@storybook/svelte';\n        </script>\n\n        <Story name=\"Story1\">\n          <div>story 1</div>\n        </Story>\n        <Story name=\"Story2\">\n          <div>story 2</div>\n        </Story>\n        ")).toMatchInlineSnapshot("\n      Object {\n        \"allocatedIds\": Array [\n          \"default\",\n          \"Template\",\n        ],\n        \"stories\": Object {\n          \"Story1\": Object {\n            \"hasArgs\": false,\n            \"name\": \"Story1\",\n            \"source\": \"<div>story 1</div>\",\n            \"template\": false,\n          },\n          \"Story2\": Object {\n            \"hasArgs\": false,\n            \"name\": \"Story2\",\n            \"source\": \"<div>story 2</div>\",\n            \"template\": false,\n          },\n        },\n      }\n    ");
  });
  test('Renamed Import', function () {
    expect(extractStories("\n        <script>\n          import { Story as SBStory, Meta as SBMeta } from '@storybook/addon-svelte-csf';\n        </script>\n\n        <SBMeta title='test'/>\n\n        <SBStory name=\"Story1\">\n          <div>story 1</div>\n        </SBStory>\n        ")).toMatchInlineSnapshot("\n      Object {\n        \"allocatedIds\": Array [\n          \"default\",\n          \"SBStory\",\n          \"SBMeta\",\n        ],\n        \"stories\": Object {\n          \"Story1\": Object {\n            \"hasArgs\": false,\n            \"name\": \"Story1\",\n            \"source\": \"<div>story 1</div>\",\n            \"template\": false,\n          },\n        },\n      }\n    ");
  });
  test('Duplicate Id', function () {
    expect(extractStories("\n        <script>\n          import { Story } from '@storybook/svelte';\n          import Button from './Button.svelte';\n        </script>\n\n        <Story name=\"Button\">\n          <div>a story</div>\n        </Story>\n        ")).toMatchInlineSnapshot("\n      Object {\n        \"allocatedIds\": Array [\n          \"default\",\n          \"Story\",\n          \"Button\",\n        ],\n        \"stories\": Object {\n          \"Button77471352\": Object {\n            \"hasArgs\": false,\n            \"name\": \"Button\",\n            \"source\": \"<div>a story</div>\",\n            \"template\": false,\n          },\n        },\n      }\n    ");
  });
});